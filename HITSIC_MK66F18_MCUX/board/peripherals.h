/***********************************************************************************************************************
 * This file was generated by the MCUXpresso Config Tools. Any manual edits made to this file
 * will be overwritten if the respective MCUXpresso Config Tools is used to update this file.
 **********************************************************************************************************************/

#ifndef _PERIPHERALS_H_
#define _PERIPHERALS_H_

/***********************************************************************************************************************
 * Included files
 **********************************************************************************************************************/
#include "fsl_common.h"
#include "fsl_adc16.h"
#include "fsl_uart.h"
#include "fsl_clock.h"
#include "fsl_ftm.h"
#include "fsl_i2c.h"
#include "fsl_dspi.h"
#include "fsl_lptmr.h"

#if defined(__cplusplus)
extern "C" {
#endif /* __cplusplus */

/***********************************************************************************************************************
 * Definitions
 **********************************************************************************************************************/
/* Definitions for sysfunc functional group */
/* Alias for ADC0 peripheral */
#define ADC0_PERIPHERAL ADC0
/* adc0 interrupt vector ID (number). */
#define ADC0_IRQN ADC0_IRQn
/* adc0 interrupt handler identifier. */
#define ADC0_IRQHANDLER ADC0_IRQHandler
/* Channel 0 (SE.8) conversion control group. */
#define ADC0_CH0_CONTROL_GROUP 0
/* Channel 1 (SE.9) conversion control group. */
#define ADC0_CH1_CONTROL_GROUP 0
/* Channel 2 (SE.10) conversion control group. */
#define ADC0_CH2_CONTROL_GROUP 0
/* Channel 3 (SE.12) conversion control group. */
#define ADC0_CH3_CONTROL_GROUP 0
/* Channel 4 (SE.13) conversion control group. */
#define ADC0_CH4_CONTROL_GROUP 0
/* Channel 5 (SE.14) conversion control group. */
#define ADC0_CH5_CONTROL_GROUP 0
/* Channel 6 (SE.23) conversion control group. */
#define ADC0_CH6_CONTROL_GROUP 0
/* Alias for ADC1 peripheral */
#define ADC1_PERIPHERAL ADC1
/* adc1 interrupt vector ID (number). */
#define ADC1_IRQN ADC1_IRQn
/* adc1 interrupt handler identifier. */
#define ADC1_IRQHANDLER ADC1_IRQHandler
/* Channel 0 (SE.23) conversion control group. */
#define ADC1_CH0_CONTROL_GROUP 0
/* Definition of peripheral ID */
#define CAM_PERIPHERAL UART3
/* Definition of the clock source frequency */
#define CAM_CLOCK_SOURCE CLOCK_GetFreq(UART3_CLK_SRC)
/* Definition of peripheral ID */
#define COM_PERIPHERAL UART0
/* Definition of the clock source frequency */
#define COM_CLOCK_SOURCE CLOCK_GetFreq(UART0_CLK_SRC)
/* Definition of peripheral ID */
#define ENCOL_PERIPHERAL FTM1
/* Definition of the clock source frequency */
#define ENCOL_CLOCK_SOURCE CLOCK_GetFreq(kCLOCK_BusClk)
/* encoL interrupt vector ID (number). */
#define ENCOL_IRQN FTM1_IRQn
/* encoL interrupt handler identifier. */
#define ENCOL_IRQHANDLER FTM1_IRQHandler
/* Definition of peripheral ID */
#define ENCOR_PERIPHERAL FTM2
/* Definition of the clock source frequency */
#define ENCOR_CLOCK_SOURCE CLOCK_GetFreq(kCLOCK_BusClk)
/* encoR interrupt vector ID (number). */
#define ENCOR_IRQN FTM2_IRQn
/* encoR interrupt handler identifier. */
#define ENCOR_IRQHANDLER FTM2_IRQHandler
/* sysfunc defines for I2C2 */
/* Definition of peripheral ID */
#define IMU_PERIPHERAL I2C2
/* Definition of the clock source */
#define IMU_CLOCK_SOURCE I2C2_CLK_SRC
/* Definition of the clock source frequency */
#define IMU_CLK_FREQ CLOCK_GetFreq(IMU_CLOCK_SOURCE)
/* Definition of peripheral ID */
#define MOTOR_PERIPHERAL FTM0
/* Definition of the clock source frequency */
#define MOTOR_CLOCK_SOURCE CLOCK_GetFreq(kCLOCK_BusClk)
/* motor interrupt vector ID (number). */
#define MOTOR_IRQN FTM0_IRQn
/* motor interrupt handler identifier. */
#define MOTOR_IRQHANDLER FTM0_IRQHandler
/* sysfunc defines for SPI0 */
/* Definition of peripheral ID */
#define OLED_PERIPHERAL SPI0
/* Definition of the clock source */
#define OLED_CLOCK_SOURCE DSPI0_CLK_SRC
/* Definition of the clock source frequency */
#define OLED_CLK_FREQ CLOCK_GetFreq(OLED_CLOCK_SOURCE)
/* sysfunc defines for LPTMR0 */
/* Definition of peripheral ID */
#define PITMGR_PERIPHERAL LPTMR0
/* Definition of the clock source frequency */
#define PITMGR_CLK_FREQ 50000000UL
/* Definition of the prescaled clock source frequency */
#define PITMGR_INPUT_FREQ 50000000UL
/* Definition of the timer period in us */
#define PITMGR_USEC_COUNT 1000UL
/* Definition of the timer period in number of ticks */
#define PITMGR_TICKS 50000UL
/* pitmgr interrupt vector ID (number). */
#define PITMGR_IRQN LPTMR0_IRQn
/* pitmgr interrupt vector priority. */
#define PITMGR_IRQ_PRIORITY 4
/* pitmgr interrupt handler identifier. */
#define PITMGR_IRQHANDLER LPTMR0_IRQHandler
/* Definition of peripheral ID */
#define SERVO_CLED_PERIPHERAL FTM3
/* Definition of the clock source frequency */
#define SERVO_CLED_CLOCK_SOURCE CLOCK_GetFreq(kCLOCK_BusClk)
/* servo_cled interrupt vector ID (number). */
#define SERVO_CLED_IRQN FTM3_IRQn
/* servo_cled interrupt handler identifier. */
#define SERVO_CLED_IRQHANDLER FTM3_IRQHandler
/* sysfunc defines for I2C0 */
/* Definition of peripheral ID */
#define TOF_PERIPHERAL I2C0
/* Definition of the clock source */
#define TOF_CLOCK_SOURCE I2C0_CLK_SRC
/* Definition of the clock source frequency */
#define TOF_CLK_FREQ CLOCK_GetFreq(TOF_CLOCK_SOURCE)

/***********************************************************************************************************************
 * Global variables
 **********************************************************************************************************************/
extern adc16_channel_config_t adc0_channelsConfig[7];
extern const adc16_config_t adc0_config;
extern const adc16_channel_mux_mode_t adc0_muxMode;
extern const adc16_hardware_average_mode_t adc0_hardwareAverageMode;
extern adc16_channel_config_t adc1_channelsConfig[1];
extern const adc16_config_t adc1_config;
extern const adc16_channel_mux_mode_t adc1_muxMode;
extern const adc16_hardware_average_mode_t adc1_hardwareAverageMode;
extern const uart_config_t cam_config;
extern const uart_config_t com_config;
extern const ftm_config_t encoL_config;
extern const ftm_config_t encoR_config;
extern const i2c_master_config_t imu_config;
extern const ftm_config_t motor_config;
extern const dspi_master_config_t oled_config;
extern const lptmr_config_t pitmgr_config;
extern const ftm_config_t servo_cled_config;
extern const i2c_master_config_t tof_config;

/***********************************************************************************************************************
 * Initialization functions
 **********************************************************************************************************************/
void sysfunc(void);

/***********************************************************************************************************************
 * BOARD_InitBootPeripherals function
 **********************************************************************************************************************/
void BOARD_InitBootPeripherals(void);

#if defined(__cplusplus)
}
#endif

#endif /* _PERIPHERALS_H_ */
